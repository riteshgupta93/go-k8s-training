apiVersion: v1
kind: Namespace
metadata:
  name: ecom-app
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: ecom-app
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: ecom-app
data: 
  POSTGRES_PASSWORD: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-dep
  namespace: ecom-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: postgres-pv-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
      containers:
      - name: postgres
        image: postgres
        envFrom:
          - configMapRef:
              name: postgres-config
        ports:
          - containerPort: 5432
            name: "tcp"
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data/"
            name: postgres-pv-storage
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: ecom-app
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
   - port: 5432
  selector:
   app: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ecom-app
  name: orders-config
data:
  DBHOST: postgres-svc
  DBPORT: "5432"
  DBUSER: postgres
  DBPASS: postgres
  DBNAME: postgres   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-dep
  namespace: ecom-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
    spec:
      containers:
      - name: orders
        image: riteshgupta/ecom-app:order-0.1
        envFrom:
          - configMapRef:
              name: orders-config
        ports:
          - containerPort: 8001
            name: "tcp"
---
apiVersion: v1
kind: Service
metadata:
  name: order-svc
  namespace: ecom-app
  labels:
    app: orders
spec:
  type: ClusterIP
  ports:
   - port: 8001
  selector:
   app: orders
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ecom-app
  name: users-config
data:
  DBHOST: postgres-svc
  DBPORT: "5432"
  DBUSER: postgres
  DBPASS: postgres
  DBNAME: postgres
  ORDERSERVICEHOST: order-svc
  ORDERSERVICEPORT: "8001"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-dep
  namespace: ecom-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
      - name: users
        image: riteshgupta/ecom-app:user-0.1
        envFrom:
          - configMapRef:
              name: users-config
        ports:
          - containerPort: 8000
            name: "tcp"
---
apiVersion: v1
kind: Service
metadata:
  name: user-svc
  namespace: ecom-app
  labels:
    app: users
spec:
  type: NodePort
  ports:
   - port: 8000
  selector:
   app: users
